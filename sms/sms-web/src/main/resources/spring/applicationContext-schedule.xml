<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
      
    <!-- 要调用的工作类  -->
	<bean id="GetReportJob" class="com.oneplus.sms.util.job.GetReportJob">
		<property name="smsService">
			<ref bean="smsService"/>
		</property>
	</bean>
	
	<bean id="ReceiveJob" class="com.oneplus.sms.util.job.ReceiveJob">
		<property name="smsService">
			<ref bean="smsService"/>
		</property>
	</bean>
	
	<bean id="CheckFeeJob" class="com.oneplus.sms.util.job.CheckFeeJob">
		<property name="smsService">
			<ref bean="smsService"/>
		</property>
	</bean>
	
	<!--  定义调用对象和调用对象的方法  -->
	<bean id="GetReportTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="GetReportJob" />
		</property>
		<property name="targetMethod">
			<value>execute</value>
		</property>
	</bean>
	<bean id="ReceiveTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="ReceiveJob" />
		</property>
		<property name="targetMethod">
			<value>execute</value>
		</property>
	</bean>
	
	<bean id="CheckFeeTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="CheckFeeJob" />
		</property>
		<property name="targetMethod">
			<value>execute</value>
		</property>
	</bean>
	
	<!--定义触发时间  -->
	<bean id="GetReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="GetReportTask" />
		</property>
		<!--cron表达式  秒，分，时，月日期，月，周日期，年，特殊字符 -->
		<!-- 每五分钟执行一次 -->
		<property name="cronExpression">
			<!--<value>0/10 * * * * ?</value>-->
			<value>0 0/5 * * * ?</value>
		</property>
	</bean>
	
	<!--定义触发时间  -->
	<bean id="ReceiveTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="ReceiveTask" />
		</property>
		<!--cron表达式  秒，分，时，月日期，月，周日期，年，特殊字符 -->
		<property name="cronExpression">
			<!--<value>0/10 * * * * ?</value>-->
			<value>0 0/10 * * * ?</value>
		</property>
	</bean>
	
		<!--定义触发时间  -->
	<bean id="CheckFeeTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="CheckFeeTask" />
		</property>
		<!--cron表达式  秒，分，时，月日期，月，周日期，年，特殊字符 -->
		<property name="cronExpression">
			<!-- <value>0 0/1 * * * ?</value> -->
			<value>0 0 8,14,20 * * ?</value>
		</property>
	</bean>
	
	<!--总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序   -->
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="GetReportTrigger" />
				<!-- <ref bean="ReceiveTrigger" /> -->
				<ref bean="CheckFeeTrigger" />
			</list>
		</property>
		<property name="schedulerContextAsMap">
			<map>
				<entry key="timeout" value="30" />
			</map>
		</property>
		<property name="configLocation" value="classpath:quartz.properties" />
	</bean>
	
</beans>
